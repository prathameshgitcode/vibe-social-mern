{"ast":null,"code":"// import React from \"react\";\n\n// import { Table, Divider, Tag, Button } from \"antd\";\n// import axios from \"axios\";\n// import { useEffect } from \"react\";\n// import { useState } from \"react\";\n// import { blockUserAdmin, unBlockUserAdmin, usersDataAdmin } from \"../../api/AdminRequest\";\n\n// const AdminUsersList = () => {\n//   const [user, setUser] = useState([]);\n//   const [active, setActive] = useState([]);\n\n//   const { Column } = Table;\n\n//   const blockUser = async (userID) => {\n//     try {\n//       const response = await blockUserAdmin(userID)\n\n//       if (response.data.success) {\n//         console.log(\"Blocked\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const unBlockUser = async (userID) => {\n//     try {\n//       const response = await unBlockUserAdmin(userID)\n\n//       if (response.data.success) {\n//         console.log(\"unBlocked\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     async function usersList() {\n//       try {\n//         const response = await usersDataAdmin() \n\n//         if (response.data.success) {\n//           console.log(response.data.formattedFriends, \"first line admin\");\n//           setUser(response.data.formattedFriends);\n//         }\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     }\n//     usersList();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Table dataSource={user ? user : \"\"}>\n//         <Column title=\"Name\" dataIndex=\"firstName\" key=\"firstName\" />\n//         <Column title=\"Email\" dataIndex=\"location\" key=\"location\" />\n//         <Column title=\"Email\" dataIndex=\"email\" key=\"age\" />\n\n//         <Column\n//           title=\"Action\"\n//           key=\"action\"\n//           render={(record) => (\n//             <span>\n//            {record.Active ? (  <Button\n//                 type=\"primary\" \n//                 danger\n//                 onClick={() => {\n//                   if (window.confirm(\"Do you want to block this user?\"))\n//                     blockUser(record._id);\n\n//                 }}\n//               >\n//                 Block\n//               </Button>)\n\n//            :\n\n//              ( <Button\n//                 type=\"primary\"\n//                 onClick={() => {\n//                   if (window.confirm(\"Do you want to unblock this user?\"))\n//                     unBlockUser(record._id);\n//                 }}\n//               >\n//                 UnBlock\n//               </Button>)}\n//             </span>\n//           )}\n//         />\n//       </Table>\n//     </div>\n//   );\n// };\n// export default AdminUsersList;","map":{"version":3,"names":[],"sources":["C:/Users/Prathamesh/Desktop/social/SocialMedia-Project---MERN/SocialMedia/client/src/components/Admin/AdminUsersList.jsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// import { Table, Divider, Tag, Button } from \"antd\";\r\n// import axios from \"axios\";\r\n// import { useEffect } from \"react\";\r\n// import { useState } from \"react\";\r\n// import { blockUserAdmin, unBlockUserAdmin, usersDataAdmin } from \"../../api/AdminRequest\";\r\n\r\n// const AdminUsersList = () => {\r\n//   const [user, setUser] = useState([]);\r\n//   const [active, setActive] = useState([]);\r\n\r\n//   const { Column } = Table;\r\n\r\n//   const blockUser = async (userID) => {\r\n//     try {\r\n//       const response = await blockUserAdmin(userID)\r\n    \r\n\r\n//       if (response.data.success) {\r\n//         console.log(\"Blocked\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   const unBlockUser = async (userID) => {\r\n//     try {\r\n//       const response = await unBlockUserAdmin(userID)\r\n    \r\n\r\n//       if (response.data.success) {\r\n//         console.log(\"unBlocked\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     async function usersList() {\r\n//       try {\r\n//         const response = await usersDataAdmin() \r\n      \r\n\r\n//         if (response.data.success) {\r\n//           console.log(response.data.formattedFriends, \"first line admin\");\r\n//           setUser(response.data.formattedFriends);\r\n//         }\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     }\r\n//     usersList();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <Table dataSource={user ? user : \"\"}>\r\n//         <Column title=\"Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n//         <Column title=\"Email\" dataIndex=\"location\" key=\"location\" />\r\n//         <Column title=\"Email\" dataIndex=\"email\" key=\"age\" />\r\n\r\n//         <Column\r\n//           title=\"Action\"\r\n//           key=\"action\"\r\n//           render={(record) => (\r\n//             <span>\r\n//            {record.Active ? (  <Button\r\n//                 type=\"primary\" \r\n//                 danger\r\n//                 onClick={() => {\r\n//                   if (window.confirm(\"Do you want to block this user?\"))\r\n//                     blockUser(record._id);\r\n\r\n//                 }}\r\n//               >\r\n//                 Block\r\n//               </Button>)\r\n\r\n//            :\r\n\r\n//              ( <Button\r\n//                 type=\"primary\"\r\n//                 onClick={() => {\r\n//                   if (window.confirm(\"Do you want to unblock this user?\"))\r\n//                     unBlockUser(record._id);\r\n//                 }}\r\n//               >\r\n//                 UnBlock\r\n//               </Button>)}\r\n//             </span>\r\n//           )}\r\n//         />\r\n//       </Table>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default AdminUsersList;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}